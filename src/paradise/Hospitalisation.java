/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paradise;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import paradise.objets.Medecin;
import paradise.objets.SQL_Outil;

/**
 *
 * @author Younouss boré
 */
public class Hospitalisation extends javax.swing.JFrame {

    /**
     * Creates new form Hospitalisation
     */
    public Hospitalisation() {
        initComponents();
        initialiser_interface();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSlider1 = new javax.swing.JSlider();
        action_name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        montant = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        facture_nom = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        facture_prenom = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        montant_final = new javax.swing.JTextField();
        slider = new javax.swing.JSlider();
        slider_value = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        action_name.setText("hospitalisation");

        jLabel2.setText("Prix/Jour:");

        montant.setText("0000");

        jLabel3.setText("FCFA");

        jButton1.setText("Facturer");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel4.setText("Nom:");

        facture_nom.setText("son nom");

        jLabel5.setText("Prenom:");

        facture_prenom.setText("son prenom");

        jLabel6.setText("Nombre de nuit");

        jLabel7.setText("Montant total a payé:");

        montant_final.setText("0");
        montant_final.setEnabled(false);

        slider.setMaximum(31);
        slider.setMinimum(1);
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        slider_value.setText("test");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(facture_nom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(facture_prenom))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(action_name)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(montant, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slider_value)
                        .addGap(0, 34, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(montant_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(action_name)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(facture_nom)
                    .addComponent(jLabel5)
                    .addComponent(facture_prenom))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(slider_value, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(montant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(montant_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        // TODO add your handling code here:
        slider_value.setText(String.valueOf(slider.getValue()));
        montant_final.setText(String.valueOf(Integer.parseInt(montant.getText())*Integer.parseInt(slider_value.getText())));
    }//GEN-LAST:event_sliderStateChanged

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if(facturer()){
            this.dispose();
        }
        else{
            JOptionPane.showMessageDialog(this, "Une erreur est survenue", "erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hospitalisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hospitalisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hospitalisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hospitalisation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hospitalisation().setVisible(true);
            }
        });
    }
    
    public boolean facturer(){
        String[] hospitalisation_key= new String[2];
        hospitalisation_key[0]="detail";
        hospitalisation_key[1]="id_materiel";
        String[] hospitalisation_value= new String[2];
        hospitalisation_value[0]="Un sejour de "+slider_value.getText()+" jours";
        try{
            if(empty_bed!=null){
                empty_bed.next();
                if(empty_bed.getString("id").equals("")){
                    return false;
                }
                else{
                    hospitalisation_value[1]=empty_bed.getString("id");
                    if(action_name.getText().equals("hospitalisation")){
                        try{
                            if(C1.try_connection()){
                                if(C1.insert_into("hospitalisation", hospitalisation_key, hospitalisation_value)){
                                    ResultSet hospitalisation=C1.simple_select("hospitalisation");
                                    if(hospitalisation!=null){
                                        hospitalisation.next();
                                        String[] prise_en_charge_key= new String[2];
                                        prise_en_charge_key[0]="id_patient";
                                        prise_en_charge_key[1]="id_hospitalisation";
                                        String[] prise_en_charge_value= new String[2];
                                        prise_en_charge_value[0]=String.valueOf(Interface_docteur.current_patient.id);
                                        prise_en_charge_value[1]=hospitalisation.getString("id");
                                        if(C1.insert_into("prise_en_charge",prise_en_charge_key,prise_en_charge_value)){
                                            hospitalisation=C1.simple_select("prise_en_charge");
                                            if(hospitalisation!=null){
                                                hospitalisation.next();
                                                prise_en_charge_key[0]="prix";
                                                prise_en_charge_key[1]="id_prise_en_charge";
                                                prise_en_charge_value[0]=String.valueOf(Integer.parseInt(montant.getText())*Integer.parseInt(slider_value.getText()));
                                                prise_en_charge_value[1]=hospitalisation.getString("id");
                                                if(C1.insert_into("facture",prise_en_charge_key,prise_en_charge_value)){
                                                    prise_en_charge_key[0]="id_user";
                                                    prise_en_charge_key[1]="id_prise_en_charge";
                                                    prise_en_charge_value[0]=Medecin.id;
                                                    prise_en_charge_value[1]=hospitalisation.getString("id");
                                                    if(C1.insert_into("relation_prise_en_charge",prise_en_charge_key,prise_en_charge_value)){
                                                        String[] ticket_off_key=new String[1];
                                                        String[] ticket_off_value=new String[1];
                                                        ticket_off_key[0]="statut";
                                                        ticket_off_value[0]="0";
                                                        if(C1.edit_from_id("ticket", ticket_off_key, ticket_off_value, Integer.parseInt(Interface_docteur.current_patient.numero_ticket))){
                                                            return true;
                                                        }
                                                        else{
                                                            return false;
                                                        }

                                                    }
                                                    else{
                                                        return false;
                                                    }
                                                }
                                                else{
                                                    return false;
                                                }
                                            }
                                            else{
                                                return false;
                                            } 
                                        }
                                        else{
                                            return false;
                                        }
                                    }
                                    else{
                                        return false;
                                    }     
                                }
                                else{
                                    return false;
                                }
                            }
                            else{
                                return false;
                            }
                        }
                        catch(Exception e){
                            e.printStackTrace();
                            return false;
                        }  
                    }
                    else{
                        return false;
                    }
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "12Une erreur est survenue", "erreur", JOptionPane.ERROR_MESSAGE);
                return false;
            }
            
        }
        catch(Exception e){
            e.printStackTrace();
            return false;
        }
        
        
    } 
    
    void initialiser_interface(){
        facture_nom.setText(Interface_docteur.current_patient.nom);
        facture_prenom.setText(Interface_docteur.current_patient.prenom);
    }
    
    public SQL_Outil C1= new SQL_Outil("paradis");
    ResultSet empty_bed=select_empty_bed();
    
    public ResultSet select_empty_bed(){
        String query="SELECT * FROM materiel, chambre WHERE materiel.etat=1 AND chambre.id_bloc='"+Medecin.id_bloc+"' AND materiel.id_chambre=chambre.id AND materiel.nom='lit'";
        Object resultat=new Object();
        try{
            C1.try_connection();
            PreparedStatement stm= C1.conn.prepareStatement(query);
            resultat=(ResultSet)stm.executeQuery();
            System.out.println("Lit recuperer");
        }
        catch (Exception e){
            e.printStackTrace();
            System.out.println("Erreur de connexion");
            resultat=null;
        }
        return (ResultSet)resultat;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel action_name;
    private javax.swing.JLabel facture_nom;
    private javax.swing.JLabel facture_prenom;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextField montant;
    private javax.swing.JTextField montant_final;
    private javax.swing.JSlider slider;
    private javax.swing.JLabel slider_value;
    // End of variables declaration//GEN-END:variables
}
